name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.8.0
  SQLX_FEATURES: "rustls,postgres"
  APP_USER: app
  APP_USER_PWD: secret
  APP_DB_NAME: newsletter

jobs:
  build:

    runs-on: ubuntu-latest

    # Service containers to run alongside the `test` container job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Environment variables scoped only for the `postgres` element
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        # When you map ports using the ports keyword, GitHub uses the --publish command to publish the containerâ€™s ports to the Docker host
        # Opens tcp port 5432 on the host and service container
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Install sqlx-cli
      run: cargo install sqlx-cli
        --version=${{ env.SQLX_VERSION }}
        --features ${{ env.SQLX_FEATURES }}
        --no-default-features
        --locked
    - name: Create app user in Postgres
      run: |
        sudo apt-get install postgresql-client

        # Create the application user
        CREATE_QUERY="CREATE USER ${APP_USER} WITH PASSWORD '${APP_USER_PWD}';"
        PGPASSWORD="password" psql -U "postgres" -h "localhost" -c "${CREATE_QUERY}"

        # Grant create db privileges to the app user
        GRANT_QUERY="ALTER USER ${APP_USER} CREATEDB;"
        PGPASSWORD="password" psql -U "postgres" -h "localhost" -c "${GRANT_QUERY}"

    - name: Migrate database
      run: SKIP_DOCKER=true ./scripts/init_db.sh
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Check that queries are fresh
      run: cargo sqlx prepare --workspace --check -- --all-targets
